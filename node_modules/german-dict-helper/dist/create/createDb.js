"use strict";
/**
 * @license
 * Copyright 2019 Ludan Stoecklé
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
const readline_1 = require("readline");
const fs_1 = require("fs");
const nouns = {};
const adjectives = {};
const dictpath = 'resources_src/german-pos-dict/dictionary.dump';
const lineReader = readline_1.createInterface({
    input: fs_1.createReadStream(dictpath),
});
console.log(`starting to process German POS dict file: ${dictpath}`);
try {
    lineReader
        .on('line', function (line) {
        const lineData = line.split('\t');
        const flexForm = lineData[0];
        const lemma = lineData[1];
        const props = lineData[2].split(':');
        const nature = props[0];
        /*
        GRU: alten altem etc.
        KOM: älteres
        SUP: ältesten
        */
        const isAdj = nature === 'ADJ' || nature === 'PA1' || nature === 'PA2';
        if (nature === 'SUB' || (isAdj && props[4] === 'GRU')) {
            const natureMapping = {
                SUB: 'SUB',
                ADJ: 'ADJ',
                PA1: 'ADJ',
                PA2: 'ADJ', // considered as adj in the db
            };
            const targetNature = natureMapping[nature];
            /*
              nouns:
              export when nature='SUB'
              key: ff or key: lemma
              val: lemma
            */
            if (targetNature === 'SUB') {
                nouns[lemma] = lemma;
                nouns[flexForm] = lemma;
            }
            /*
              adjectives:
              export when nature='ADJ'
              key: ff or key: lemma
              val: lemma
            */
            if (targetNature === 'ADJ') {
                adjectives[lemma] = lemma;
                adjectives[flexForm] = lemma;
            }
        }
    })
        .on('close', function () {
        fs_1.writeFileSync('resources_pub/nouns.json', JSON.stringify(nouns), 'utf8');
        fs_1.writeFileSync('resources_pub/adjectives.json', JSON.stringify(adjectives), 'utf8');
        console.log('done.');
    });
}
catch (err) {
    console.log(err);
}
//# sourceMappingURL=createDb.js.map