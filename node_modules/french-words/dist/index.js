"use strict";
/**
 * @license
 * Copyright 2019 Ludan Stoeckl√©
 * SPDX-License-Identifier: Apache-2.0
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWordInfo = exports.getGender = exports.getPlural = void 0;
const rosaenlg_pluralize_fr_1 = __importDefault(require("rosaenlg-pluralize-fr"));
function getPlural(wordsList, word) {
    if (!word) {
        const err = new Error();
        err.name = 'TypeError';
        err.message = 'word must not be null';
        throw err;
    }
    if (wordsList && wordsList[word] && wordsList[word].plural) {
        return wordsList[word].plural;
    }
    else {
        return rosaenlg_pluralize_fr_1.default(word);
    }
}
exports.getPlural = getPlural;
function getGender(wordsList, genderList, word) {
    if (!word) {
        const err = new Error();
        err.name = 'TypeError';
        err.message = 'word must not be null';
        throw err;
    }
    if (!genderList && !wordsList) {
        const err = new Error();
        err.name = 'TypeError';
        err.message = 'must provide either wordsList or genderList';
        throw err;
    }
    if (wordsList && wordsList[word] && wordsList[word].gender) {
        return wordsList[word].gender;
    }
    else if (genderList) {
        if (genderList[word]) {
            return genderList[word];
        }
        else if (genderList[word.toLowerCase()]) {
            return genderList[word.toLowerCase()];
        }
    }
    const err = new Error();
    err.name = 'NotFoundInDict';
    if (word === 'M' || word === 'F' || word === 'N') {
        err.message = `${word} is a gender. You must use an object that has a gender.`;
    }
    else {
        err.message = `${word} not found in dict for gender`;
    }
    throw err;
}
exports.getGender = getGender;
function getWordInfo(genderList, word) {
    return {
        gender: getGender(null, genderList, word),
        plural: getPlural(null, word),
    };
}
exports.getWordInfo = getWordInfo;
//# sourceMappingURL=index.js.map