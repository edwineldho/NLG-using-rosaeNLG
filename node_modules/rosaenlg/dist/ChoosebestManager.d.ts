/**
 * @license
 * Copyright 2019 Ludan StoecklÃ©
 * SPDX-License-Identifier: Apache-2.0
 */
import { RandomManager } from './RandomManager';
import { SaveRollbackManager } from './SaveRollbackManager';
import { DebugHolder } from 'synonym-optimizer';
import { Languages } from './NlgLib';
import { Helper } from './Helper';
import { SpyI } from './Spy';
export interface CompleteDebug {
    maxTest: number;
    perfectScoreAfter: number;
    bestScore: number;
    bestText: string;
    bestDebug: DebugHolder;
    worstScore: number;
    worstText: string;
    worstDebug: DebugHolder;
}
declare type MixinFct = (elt: any, extraParams?: any) => void;
export declare class ChoosebestManager {
    private language;
    private helper;
    private saveRollbackManager;
    private randomManager;
    private defaultAmong;
    private spy;
    private synOptimizer;
    setSpy(spy: SpyI): void;
    constructor(language: Languages, helper: Helper, saveRollbackManager: SaveRollbackManager, randomManager: RandomManager, defaultAmong: number);
    runChoosebest(which: MixinFct, params: {
        among: number;
        debug: boolean;
        debugRes: CompleteDebug;
        stop_words_add: string[];
        stop_words_remove: string[];
        stop_words_override: string[];
    }): void;
}
export {};
