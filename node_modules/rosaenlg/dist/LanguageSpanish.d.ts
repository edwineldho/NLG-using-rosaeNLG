/**
 * @license
 * Copyright 2019 Ludan Stoeckl√©
 * SPDX-License-Identifier: Apache-2.0
 */
import { DetParams, DetTypes, LanguageImpl, SomeTense, AgreeAdjParams } from './LanguageImpl';
import { GenderNumberManager } from './GenderNumberManager';
import { Genders, Numbers } from './NlgLib';
import { VerbsData } from 'rosaenlg-pug-code-gen';
import { ConjParams } from './VerbsManager';
import 'numeral/locales/es-es';
import { LanguageCommon } from 'rosaenlg-commons';
export declare class LanguageSpanish extends LanguageImpl {
    iso2: string;
    langForNumeral: string;
    langForDateFns: Locale;
    n2wordsLang: string;
    n2wordsLib: any;
    floatingPointWord: string;
    table0to9: string[];
    hasGender: boolean;
    hasNeutral: boolean;
    defaultAdjPos: string;
    defaultTense: string;
    defaultLastSeparatorForAdjectives: string;
    universalMapping: {
        UNIVERSAL_PRESENT: string;
        UNIVERSAL_PAST: string;
        UNIVERSAL_FUTURE: string;
        UNIVERSAL_PERFECT: string;
        UNIVERSAL_PLUPERFECT: string;
    };
    spacesWhenSeparatingElements: boolean;
    constructor(languageCommon: LanguageCommon);
    getDet(det: DetTypes, params: DetParams): string;
    getAgreeAdj(adjective: string, gender: Genders, number: Numbers, _subject: any, params: AgreeAdjParams): string;
    getWordGender(word: string): Genders;
    getOrdinal(val: number, gender: Genders): string;
    getSubstantive(subst: string, number: Numbers): string;
    getConjugation(_subject: any, verb: string, tense: SomeTense, number: Numbers, _conjParams: ConjParams, _genderNumberManager: GenderNumberManager, embeddedVerbs: VerbsData): string;
    isPlural(val: number): boolean;
}
