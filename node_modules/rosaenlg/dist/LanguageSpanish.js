"use strict";
/**
 * @license
 * Copyright 2019 Ludan Stoeckl√©
 * SPDX-License-Identifier: Apache-2.0
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageSpanish = void 0;
const LanguageImpl_1 = require("./LanguageImpl");
const spanish_determiners_1 = require("spanish-determiners");
const spanish_adjectives_wrapper_1 = require("spanish-adjectives-wrapper");
const spanish_words_1 = require("spanish-words");
const ordinal_spanish_1 = __importDefault(require("ordinal-spanish"));
require("numeral/locales/es-es");
const locale_1 = require("date-fns/locale");
const spanish_verbs_wrapper_1 = require("spanish-verbs-wrapper");
const n2words_ES_js_1 = __importDefault(require("../../rosaenlg-n2words/dist/n2words_ES.js"));
class LanguageSpanish extends LanguageImpl_1.LanguageImpl {
    constructor(languageCommon) {
        super(languageCommon);
        this.iso2 = 'es';
        this.langForNumeral = 'es-es';
        this.langForDateFns = locale_1.es;
        this.n2wordsLang = 'es';
        this.n2wordsLib = n2words_ES_js_1.default;
        this.floatingPointWord = 'coma';
        this.table0to9 = ['cero', 'uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve'];
        this.hasGender = true;
        this.hasNeutral = true;
        this.defaultAdjPos = 'AFTER';
        this.defaultTense = 'INDICATIVE_PRESENT';
        this.defaultLastSeparatorForAdjectives = 'y';
        this.universalMapping = {
            UNIVERSAL_PRESENT: 'INDICATIVE_PRESENT',
            UNIVERSAL_PAST: 'INDICATIVE_PRETERITE_PERFECT',
            UNIVERSAL_FUTURE: 'INDICATIVE_FUTURE',
            UNIVERSAL_PERFECT: 'INDICATIVE_PERFECT',
            UNIVERSAL_PLUPERFECT: 'INDICATIVE_PLUPERFECT',
        };
        this.spacesWhenSeparatingElements = true;
    }
    getDet(det, params) {
        return spanish_determiners_1.getDet(det, params.genderOwned, params.numberOwned, params.after, params.dist);
    }
    getAgreeAdj(adjective, gender, number, _subject, params) {
        return spanish_adjectives_wrapper_1.agreeAdjective(this.getDictManager().getAdjsData(), adjective, gender, number, params && params.adjPos === 'BEFORE' ? true : false);
    }
    getWordGender(word) {
        return spanish_words_1.getGenderSpanishWord(this.getDictManager().getWordData(), word);
    }
    getOrdinal(val, gender) {
        return ordinal_spanish_1.default(val, gender == 'M' ? 'male' : 'female');
    }
    getSubstantive(subst, number) {
        if (number === 'S') {
            return subst;
        }
        else {
            return spanish_words_1.getPluralSpanishWord(this.getDictManager().getWordData(), subst);
        }
    }
    getConjugation(_subject, verb, tense, number, _conjParams, _genderNumberManager, embeddedVerbs) {
        // one of verbsSpecificList and conjFctEs is always null: it's one or the other
        return spanish_verbs_wrapper_1.getConjugation(embeddedVerbs, verb, this.solveTense(tense), number);
    }
    isPlural(val) {
        // http://udep.edu.pe/castellanoactual/duda-resuelta-felices-pascuas-y-cero-grados/
        if (val === 1 || val === -1) {
            return false;
        }
        else {
            return true;
        }
    }
}
exports.LanguageSpanish = LanguageSpanish;
//# sourceMappingURL=LanguageSpanish.js.map