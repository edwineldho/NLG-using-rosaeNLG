"use strict";
/**
 * @license
 * Copyright 2018, Ludan Stoeckl√©
 * SPDX-License-Identifier: MIT
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageCodeGenFrench = void 0;
const LanguageCodeGen_1 = require("./LanguageCodeGen");
const french_words_1 = require("french-words");
const conjugations_json_1 = __importDefault(require("french-verbs-lefff/dist/conjugations.json"));
const words_json_1 = __importDefault(require("french-words-gender-lefff/dist/words.json"));
const french_adjectives_wrapper_1 = require("french-adjectives-wrapper");
const french_verbs_1 = require("french-verbs");
class LanguageCodeGenFrench extends LanguageCodeGen_1.LanguageCodeGen {
    constructor() {
        super(...arguments);
        this.iso2 = 'fr';
        this.hasFlexVerbs = true;
        this.hasFlexWords = true;
        this.hasFlexAdjectives = true;
    }
    getVerbInfo(verb) {
        return french_verbs_1.getVerbInfo(conjugations_json_1.default, verb);
    }
    getWordInfo(word) {
        return french_words_1.getWordInfo(words_json_1.default, word);
    }
    getAdjectiveInfo(adjective) {
        // NB no need to give an custom list here
        return french_adjectives_wrapper_1.getAdjectiveInfo(adjective, null);
    }
}
exports.LanguageCodeGenFrench = LanguageCodeGenFrench;
//# sourceMappingURL=LanguageCodeGenFrench.js.map